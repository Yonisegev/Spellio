{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;IEFpB,wEAAqC;IACjC,wFAA2D;IAAvC,sWAAsC;IAAC,4DAAqB;IACpF,qEAAe;;;;IAEf,wEAAoC;IAChC,0EAAuE;IAAjE,gVAAqC,EAAE,IAAC;IAAyB,4DAAO;IAClF,qEAAe;;;IADoC,0DAAuB;IAAvB,uFAAuB;;;ADHvE,MAAM,YAAY;IACvB;QACA,kBAAa,GAAW,EAAE;IADV,CAAC;IAEjB,QAAQ;IAER,CAAC;IAED,UAAU,CAAC,UAAkB;QAC3B,IAAI,CAAC,aAAa,GAAG,UAAU;IACjC,CAAC;;wEATU,YAAY;0GAAZ,YAAY;QCPzB,0EAAkB;QACd,yEAA0D;QACtD,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,oEAAG;QAAA,6EAAkB;QAAA,4DAAI;QAC7B,4DAAM;QACN,0HAEe;QAEf,0HAEe;QACnB,4DAAO;;QAXE,0DAAoC;QAApC,6JAAoC;QAI1B,0DAAoB;QAApB,oFAAoB;QAIpB,0DAAmB;QAAnB,mFAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRoB;AACH;AACX;AACY;AACT;AACa;AACyC;AAC9B;AACQ;AACjB;AACwB;AACF;;AAsB7E,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YANJ;YACP,qEAAa;YACb,iEAAgB;YAChB,mEAAgB;YAChB,wDAAW;SACZ;mIAIU,SAAS,mBAlBlB,wDAAY;QACZ,qEAAa;QACb,8GAA0B;QAC1B,gFAAiB;QACjB,wFAAsB;QACtB,uEAAc;QACd,+FAAqB;QACrB,6FAAqB,aAGrB,qEAAa;QACb,iEAAgB;QAChB,mEAAgB;QAChB,wDAAW;;;;;;;;;;;;;;;;;;;;ACtBR,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;;kFAFN,iBAAiB;+GAAjB,iBAAiB;QCP9B,yEAA2B;QACvB,yEAAqB;QAAA,8DAAG;QAAA,4DAAM;QAC9B,yEAAiC;QAAA,4DAAC;QAAA,4DAAM;QACxC,yEAAiC;QAAA,4DAAC;QAAA,4DAAM;QACxC,yEAAiC;QAAA,4DAAC;QAAA,4DAAM;QACxC,yEAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,0EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,0EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,0EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,0EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,8DAAC;QAAA,4DAAM;QACxC,2EAAwC;QAAA,kEAAM;QAAA,4DAAM;QACpD,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAyC;QAAA,kEAAM;QAAA,4DAAM;QACrD,2EAA4C;QAAA,iEAAK;QAAA,4DAAM;QACvD,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAAiC;QAAA,6DAAC;QAAA,4DAAM;QACxC,2EAA4C;QAAA,iEAAK;QAAA,4DAAM;QACvD,2EAA6C;QAAA,gEAAI;QAAA,4DAAM;QACvD,2EAAoC;QAAA,+DAAG;QAAA,4DAAM;QAC7C,2EAAuC;QAAA,+DAAG;QAAA,4DAAM;QAChD,2EAAqC;QAAA,iEAAK;QAAA,4DAAM;QAChD,2EAAuC;QAAA,+DAAG;QAAA,4DAAM;QAChD,2EAAoC;QAAA,+DAAG;QAAA,4DAAM;QAC7C,2EAA6C;QAAA,gEAAI;QAAA,4DAAM;QACvD,2EAAkC;QAAA,8DAAE;QAAA,4DAAM;QAC9C,4DAAM;;;;;;;;;;;;;;;;;;;;;;;ACxCC,MAAM,cAAc;IAEzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAC5C,UAAK,GAAW,CAAC;QACjB,kBAAa,GAAkB,IAAI;IAFa,CAAC;IAIjD,WAAW,CAAC,MAAc,EAAE,cAA6B;QACvD,IAAI,UAAU,GAAW,CAAC;QAC1B,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE;QAC7B,IAAI,MAAM,KAAK,KAAK,EAAE;YACpB,IAAI,CAAC,cAAc;gBAAE,OAAM;YAC3B,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,YAAY,CAAC;SAC3E;aAAM,IAAI,MAAM,KAAK,OAAO,EAAE;YAC7B,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,GAAG,UAAU;QAC/B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,GAAG,IAAI;QAC3B,CAAC,EAAE,GAAG,CAAC;QACP,IAAI,CAAC,KAAK,IAAI,UAAU;IAC1B,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK;IACnB,CAAC;;4EAxBU,cAAc;4GAAd,cAAc;QCR3B,yEAA+C;QAC3C,0EAAwB;QAAA,kEAAO;QAAA,uEAAM;QAAA,uDAAS;QAAA,4DAAO;QAAA,4DAAO;QAC5D,yEAAiE;QAAA,uDAAiB;QAAA,4DAAM;QAC5F,4DAAM;;QAFmC,0DAAS;QAAT,0EAAS;QACzC,0DAA2D;QAA3D,0IAA2D;QAAC,0DAAiB;QAAjB,kFAAiB;;;;;;;;;;;;;;;;;;;;;ACI/E,MAAM,sBAAsB;IAEjC,YAAY,EAAc,EAAU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAC1D,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACrD,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC;YACtD,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACvC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;oBAC/B,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAC7C,CAAC,EAAE,GAAG,CAAC;aACR;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,OAAO,CAAC,KAAkB;QACxB,MAAM,MAAM,GAAW,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAC,CAAC;IACnE,CAAC;;4FAlBU,sBAAsB;oHAAtB,sBAAsB;oJAAtB,0BAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;IELjB,uEAAoB;IAAA,uDAA+B;;IAAA,4DAAO;;;;IAAtC,0DAA+B;IAA/B,sMAA+B;;ADS9D,MAAM,qBAAqB;IAEhC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAIjD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS;IACzC,CAAC;;0FARU,qBAAqB;mHAArB,qBAAqB;QCVlC,yEAAoD;QAChD,qEAAI;QAAA,qEAAU;QAAA,mHAA0D;QAAC,uDAAqC;QAAA,4DAAK;QACnH,0EAA6B;QACjC,4DAAM;;QAFmB,0DAAW;QAAX,2EAAW;QAAyC,0DAAqC;QAArC,0HAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDD;AAEjH,aAAa;AACyB;AAEP;AAEY;AAEgB;;;;;;;;;;;;;ICRvD,6EAAuE;IACnE,4EAAoD;IAA5C,uTAAuB;IAAqB,uDAA8C;IAAA,4DAAS;IAC3G,4EAA+D;IAAvD,+RAAS,+BAAwB,IAAC;IAAqB,4EAAiB;IAAA,4DAAS;IAC7F,4DAAU;;;IAF8C,0DAA8C;IAA9C,iHAA8C;;;IAGtG,2EAAqE;IACjE,8EAA2D;IAC/D,qEAAe;;;IADI,0DAA2B;IAA3B,2FAA2B;;;;IAKtC,4EAA2F;IAA1C,kUAAqB;IAAqB,+DAAI;IAAA,4DAAS;;;IAEpG,6EAAiC;IAC7B,qEAA2D;IAC/D,4DAAS;;;;IAMb,sEAC0D;;;;IADpD,6GAAuC;IACzC,8KAA8C;;;IAEtD,2EAAkC;IAAA,uDAAS;IAAA,4DAAO;;;IAAhB,0DAAS;IAAT,8EAAS;;;IAC3C,2EAAgC;IAAA,uDAAQ;IAAA,4DAAO;;;IAAf,0DAAQ;IAAR,6EAAQ;;;;;;IAjB5C,6EAA0E;IACtE,yEAAyC;IACrC,4EAAsD;IAA9C,4TAAyB;IAAqB,0EAAe;IAAA,4DAAS;IAC9E,0HAAwG;IACxG,gNAIc;IACd,4EAA+D;IAAvD,iSAAS,gCAAwB,IAAC;IAAqB,4EAAiB;IAAA,4DAAS;IAC7F,4DAAM;IACN,6EAAsB;IACtB,2EAA2C;IACvC,wHAC0D;IAC9D,4DAAM;IACN,wHAAkD;IAClD,wHAA+C;IAC/C,4EAAyE;IAAnE,4UAAiC;IACnC,iFACoG;IADf,qVAAuB;IAA5G,4DACoG;IACpG,0EAAQ;IAAA,iEAAK;IAAA,4DAAS;IAC1B,4DAAO;IACP,uEAAqB;IACzB,4DAAU;;;;IArBO,0DAAsB;IAAtB,uFAAsB;IAU6B,0DAA+B;IAA/B,yKAA+B;IAGxF,0DAAW;IAAX,8EAAW;IACX,0DAAU;IAAV,6EAAU;IAEM,0DAAmC;IAAnC,+JAAmC;;ADZ3D,MAAM,aAAa;IACxB,YAAoB,WAAwB,EAAU,WAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC9E,mBAAc,GAAW,CAAC;QAC1B,eAAU,GAAW,IAAI,CAAC,cAAc;QACxC,gBAAW,GAAW,CAAC;QACvB,aAAQ,GAAY,KAAK;QACzB,gBAAW,GAAY,IAAI;QAC3B,iBAAY,GAAY,KAAK;QAC7B,kBAAa,GAAY,KAAK;QAC9B,eAAU,GAAW,EAAE;QACvB,cAAS,GAAW,EAAE;QACtB,UAAK,GAAqB,IAAI,yCAAO,EAAW;QAChD,UAAK,GAAW,EAAE;QAClB,SAAI,GAAW,EAAE;QAEjB,mBAAc,GAAkB,IAAI;QAE1B,sBAAiB,GAAG,IAAI,uDAAY,EAAE;IAhBkC,CAAC;IAmBnF,IACI,KAAK,CAAC,OAAqC;QAC7C,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;SAC9B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE;IACtB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,WAAW,GAAG,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc;QACrC,IAAI,CAAC,yBAAyB,EAAE;IAClC,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,UAAU,GAAG,mDAAW,EAAE;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;aAC3C,IAAI,CAAC,yDAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B,SAAS,CACR,GAAG,EAAE;YACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE;YAChC,IAAI,CAAC,aAAa,EAAE;QACtB,CAAC,CACF;IACL,CAAC;IAED,aAAa;QACX,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,8EAAoB,IAAI,IAAI,CAAC,UAAU,MAAM,CAAC;QACzE,KAAK,CAAC,IAAI,EAAE;IACd,CAAC;IAED,WAAW,CAAC,EAAiB;QAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;IACtF,CAAC;IAED,YAAY,CAAC,EAAS;QACpB,EAAE,CAAC,cAAc,EAAE;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;QAC7C,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,UAAU,EAAE;YACtC,IAAI,CAAC,iBAAiB,EAAE;SACzB;aAAM;YACL,IAAI,CAAC,eAAe,EAAE;SACvB;IACH,CAAC;IAED,iBAAiB;;QACf,UAAI,CAAC,QAAQ,0CAAE,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC;QACtD,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,IAAI,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,EAAE;YACf,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,UAAU,EAAE;aAClB;iBAAM;gBACL,IAAI,CAAC,yBAAyB,EAAE;aACjC;YACD,IAAI,CAAC,SAAS,GAAG,EAAE;SAEpB;IACH,CAAC;IAED,eAAe;;QACb,IAAI,CAAC,YAAY,GAAG,IAAI;QACxB,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,kCAAkC,CAAC;QAChE,UAAU,CAAC,IAAI,EAAE;QACjB,UAAI,CAAC,QAAQ,0CAAE,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;QACzC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,GAAG,KAAK;QAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,UAAU;;QACR,IAAI,CAAC,WAAW,GAAG,UAAI,CAAC,QAAQ,0CAAE,UAAU;QAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,EAAE;IACpF,CAAC;IAED,YAAY,CAAC,UAAsB;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAC1B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU;QACrC,IAAI,MAAM,KAAK,OAAO;YAAE,OAAM;QAC9B,IAAI,MAAM,KAAK,WAAW;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/F,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YAAE,OAAM;QAC7B,IAAI,CAAC,SAAS,IAAI,MAAM;IAC1B,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,IAAI;YAAE,OAAM;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI;QACzB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;aAChD,IAAI,CAAC,yDAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B,SAAS,CACR,UAAU,CAAC,EAAE;YACX,IAAI,CAAC,aAAa,GAAG,KAAK;YAC1B,IAAI,CAAC,IAAI,GAAG,UAAU;QACxB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,GAAG;QAClB,CAAC,CAAC;IACR,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,WAAW,CAAC,cAAc;aAC5B,IAAI,CAAC,yDAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B,SAAS,CAAC,UAAU,CAAC,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;;0EA5IU,aAAa;2GAAb,aAAa;;;;;;;;QCf1B,0EAAuB;QACnB,iHAGU;QACV,2HAEe;QACf,mHAwBU;QACd,4DAAO;;QAhCO,0DAAe;QAAf,+EAAe;QAIV,0DAA8B;QAA9B,kGAA8B;QAGnC,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;;;;;IEEpB,oEAAkE;;;IAQ1D,yEAAqF;IACjF,0EAA0C;IACtC,2EAAuB;IAAA,uDAAY;IAAA,4DAAO;IAC1C,2EAAoD;IAAA,uDAAkC;;IAAA,4DAAO;IAC7F,2EAAoB;IAAA,uDAAmB;IAAA,4DAAO;IAClD,4DAAM;IAEV,4DAAK;;;;IAL0B,0DAAY;IAAZ,qFAAY;IACZ,0DAA4B;IAA5B,wFAA4B;IAAC,0DAAkC;IAAlC,uJAAkC;IAClE,0DAAmB;IAAnB,mFAAmB;;;IAV3D,wEAA8D;IAC1D,yEAA8B;IAC1B,oEAAiD;IACrD,4DAAM;IACN,yEAA4D;IACxD,qEAAI;IACA,+HAOK;;IACT,4DAAK;IACT,4DAAM;IACV,qEAAe;;;IAVuB,0DAA8B;IAA9B,+JAA8B;;ADRjE,MAAM,qBAAqB;IAEhC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAE5C,gBAAW,GAAW,QAAQ;IAFkB,CAAC;IAGjD,QAAQ;QACN,IAAI,CAAC,wBAAwB,EAAE;IACjC,CAAC;IAED,wBAAwB,CAAC,MAAc,QAAQ;QAC7C,IAAI,CAAC,WAAW,GAAG,GAAG;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,GAAG,CAAC;IACtE,CAAC;;0FAZU,qBAAqB;mHAArB,qBAAqB;QCVlC,0EAAmD;QAC/C,yEAAyB;QACrB,4EACmE;QAD3D,6IAAS,6BAAyB,MAAM,CAAC,IAAC;QACiB,+DAAI;QAAA,4DAAS;QAChF,4EACqE;QAD7D,6IAAS,6BAAyB,QAAQ,CAAC,IAAC;QACiB,iEAAM;QAAA,4DAAS;QACpF,4EACmE;QAD3D,6IAAS,6BAAyB,MAAM,CAAC,IAAC;QACiB,+DAAI;QAAA,4DAAS;QACpF,4DAAM;QACN,6MAEc;QACd,qIAgBe;;QACnB,4DAAO;;;QA1BK,0DAA8D;QAA9D,2HAA8D;QAE9D,0DAAgE;QAAhE,6HAAgE;QAEhE,0DAA8D;QAA9D,2HAA8D;QAKvD,0DAAiC;QAAjC,0JAAiC;;;;;;;;;;;;;;;;;;;;;ACZ+B;;;;;;;ICC/E,yEAAoC;IAChC,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IACxB,0EAA2E;IAAjD,0ZAAgD;IACtE,2EAA2C;IAC3C,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IACzB,4DAAO;IACX,4DAAM;;;;ADGH,MAAM,0BAA0B;IAErC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAClC,oBAAe,GAAG,IAAI,uDAAY,EAAU;QACtD,qBAAgB,GAAW,EAAE;QAC7B,qBAAgB,GAAW,EAAE;IAHmB,CAAC;IAMjD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnF,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,WAAW,0CAAE,WAAW,EAAE;IACjC,CAAC;IAED,cAAc,CAAC,QAAgB;QAC7B,IAAI,CAAC,QAAQ;YAAE,OAAM;QACrB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAM;QACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IAED,mBAAmB,CAAC,KAAa;QAC/B,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAI,CAAC,gBAAgB,GAAG,eAAe;YACvC,IAAI,CAAC,gBAAgB,GAAG,MAAM;SAC/B;aAAM,IAAI,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,eAAe;YACvC,IAAI,CAAC,gBAAgB,GAAG,QAAQ;SACjC;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC3B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB;YACxC,IAAI,CAAC,gBAAgB,GAAG,MAAM;SAC/B;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,EAAE;SAC3B;IACH,CAAC;;oGAxCU,0BAA0B;wHAA1B,0BAA0B;QCVvC,6EAAmD;QAC/C,sHAMM;QACN,yEAA4D;QACxD,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,yEAAyB;QACrB,4EAC2E;QADnE,4JAAc,wBAAoB,MAAM,CAAC,IAAC,oGAAe,wBAAoB,EAAE,CAAC,IAAtC,0FAClB,kBAAc,MAAM,CAAC,IADH;QAE9C,iEACA;QAAA,yEAAkG;QAC9F,uDACJ;QAAA,4DAAM;QACV,4DAAS;QACT,6EAC6E;QADrE,6JAAc,wBAAoB,QAAQ,CAAC,IAAC,qGAAe,wBAAoB,EAAE,CAAC,IAAtC,2FACpB,kBAAc,QAAQ,CAAC,IADH;QAEhD,oEACA;QAAA,0EAAsG;QAClG,wDACJ;QAAA,4DAAM;QAEV,4DAAS;QACT,6EAC2E;QADnE,6JAAc,wBAAoB,MAAM,CAAC,IAAC,qGAAe,wBAAoB,EAAE,CAAC,IAAtC,2FAClB,kBAAc,MAAM,CAAC,IADH;QAE9C,kEACA;QAAA,0EAAkG;QAC9F,wDACJ;QAAA,4DAAM;QAEV,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAU;;QAnCA,0DAAW;QAAX,2EAAW;QAOa,0DAA6B;QAA7B,sJAA6B;QAI/C,0DAAkB;QAAlB,+EAAkB;QAE8B,0DAAiD;QAAjD,4KAAiD;QAC7F,0DACJ;QADI,gGACJ;QAGA,0DAAkB;QAAlB,+EAAkB;QAEgC,0DAAmD;QAAnD,8KAAmD;QACjG,0DACJ;QADI,gGACJ;QAIA,0DAAkB;QAAlB,+EAAkB;QAE8B,0DAAiD;QAAjD,4KAAiD;QAC7F,0DACJ;QADI,gGACJ;;;;;;;;;;;;;;;;;;;;;;;AC/B8C;AAEX;AAGlB;AAEyB;;;;AAMnD,MAAM,WAAW;IAEtB,YAAoB,WAAwB,EAAU,IAAgB;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAE9D,oBAAe,GAAgC,IAAI,iDAAe,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QAC/F,mBAAc,GAA2B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;QAC3E,eAAU,GAAiC,IAAI,iDAAe,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1F,cAAS,GAA4B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;IALA,CAAC;IAOpE,gBAAgB,CAAC,UAAsB;QAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IAEM,eAAe,CAAC,QAAgB;QACrC,MAAM,IAAI,GAAS;YACjB,MAAM,EAAE,6CAAI,EAAE;YACd,QAAQ;SACT;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC;IAC9C,CAAC;IAEM,cAAc,CAAC,SAAwB,EAAE,OAAsB;QACpE,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,EAAE;YAC1B,OAAO,CAAC,GAAG;SACZ;QACD,MAAM,IAAI,GAAG,OAAO,GAAG,SAAS;QAChC,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACzD,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;gBACvB,OAAO,GAAG;YACZ,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;gBACvB,OAAO,GAAG;YACZ,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;gBACtB,OAAO,GAAG;YACZ;gBACE,OAAO,CAAC;SACX;IACH,CAAC;IAEM,oBAAoB,CAAC,KAAK,GAAG,MAAM;QACxC,MAAM,UAAU,GAAe,IAAI,4DAAU,EAAE;aAC5C,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,qFAA2B,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;IAC9F,CAAC;IAEM,iBAAiB,CAAC,KAAa,EAAE,KAAa;QACnD,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACpC,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG;gBACT,MAAM,EAAE,6CAAI,EAAE;gBACd,QAAQ,EAAE,OAAO;aAElB;SACF;QACD,MAAM,aAAa,mCAAQ,QAAQ,KAAE,KAAK,EAAE,KAAK,GAAE;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,qFAA2B,EAAE,aAAa,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IACpG,CAAC;IAEO,kBAAkB;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;QACnD,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI;QACtB,OAAO,IAAI;IACb,CAAC;;sEA/DU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACNb,MAAM,WAAW;IAEtB,gBAAgB,CAAC;IAEV,aAAa,CAAC,GAAW,EAAE,GAAQ;QACxC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAChC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,eAAe,CAAC,GAAW;QAChC,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG;YAAE,OAAM;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;;sEAbU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACH0C;AAEhB;AACS;AACI;;;AAKpD,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,YAAY,CAAC,GAAW;QAC7B,IAAI,UAAU,GAAe,IAAI,4DAAU,EAAE;aAC1C,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+EAAqB,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACtF,IAAI,CACH,qDAAK,CAAC,CAAC,CAAC,EACR,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,gDAAU,CAAC,uBAAuB,CAAC,CAAC,CACzD;IACL,CAAC;IAEM,iBAAiB,CAAC,IAAY;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,mFAAyB,IAAI,IAAI,EAAE,CAAC;YAC1D,IAAI,CACF,mDAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YAChB,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU;YAChE,IAAI,CAAC,UAAU;gBAAE,OAAO,gDAAU,CAAC,oCAAoC,CAAC;YACxE,OAAO,UAAU;QACnB,CAAC,CAAC,EACF,qDAAK,CAAC,CAAC,CAAC,EACR,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,OAAO,gDAAU,CAAC,oCAAoC,CAAC;QACzD,CAAC,CAAC,CACH;IACL,CAAC;IAEM,kBAAkB,CAAC,KAAyB;QACjD,QAAQ,KAAK,EAAE;YACb,KAAK,MAAM;gBACT,OAAO,CAAC;YACV,KAAK,QAAQ;gBACX,OAAO,CAAC;YACV,KAAK,MAAM;gBACT,OAAO,EAAE;YACX;gBACE,OAAO,CAAC;SACX;IACH,CAAC;;sEAxCU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;ACPpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,eAAe,EAAE,kCAAkC;IACnD,SAAS,EAAE,0BAA0B;IACrC,QAAQ,EAAE,wBAAwB;IAClC,aAAa,EAAE,iDAAiD;CACjE,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACnBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cmps/keyboard/keyboard.component.ts","./src/app/cmps/keyboard/keyboard.component.html","./src/app/cmps/score/score.component.ts","./src/app/cmps/score/score.component.html","./src/app/directives/keyboard-click.directive.ts","./src/app/pages/ending-screen/ending-screen.component.ts","./src/app/pages/ending-screen/ending-screen.component.html","./src/app/pages/game/game.component.ts","./src/app/pages/game/game.component.html","./src/app/pages/leaderboards/leaderboards.component.ts","./src/app/pages/leaderboards/leaderboards.component.html","./src/app/pages/settings-selection/settings-selection.component.ts","./src/app/pages/settings-selection/settings-selection.component.html","./src/app/services/game.service.ts","./src/app/services/util.service.ts","./src/app/services/word.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n  levelSelected: string = ''\n  ngOnInit() {\n\n  }\n  \n  onSetLevel(difficulty: string) {\n    this.levelSelected = difficulty\n  }\n\n\n}\n","<main class=\"app\">\n    <div [ngClass]=\"{'small': levelSelected}\" class=\"heading\">\n        <h1>Spellio</h1>\n        <p>Test your English!</p>\n    </div>\n    <ng-container *ngIf=\"!levelSelected\">\n        <settings-selection (onLevelSelected)=\"onSetLevel($event)\"></settings-selection>\n    </ng-container>\n\n    <ng-container *ngIf=\"levelSelected\">\n        <game (onResetDifficulty)=\"levelSelected = ''\" [level]=\"levelSelected\"></game>\n    </ng-container>\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './pages/game/game.component';\nimport { SettingsSelectionComponent } from './pages/settings-selection/settings-selection.component';\nimport { KeyboardComponent } from './cmps/keyboard/keyboard.component';\nimport { KeyboardClickDirective } from './directives/keyboard-click.directive';\nimport { ScoreComponent } from './cmps/score/score.component';\nimport { EndingScreenComponent } from './pages/ending-screen/ending-screen.component';\nimport { LeaderboardsComponent } from './pages/leaderboards/leaderboards.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    SettingsSelectionComponent,\n    KeyboardComponent,\n    KeyboardClickDirective,\n    ScoreComponent,\n    EndingScreenComponent,\n    LeaderboardsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'keyboard',\n  templateUrl: './keyboard.component.html',\n  styleUrls: ['./keyboard.component.scss']\n})\nexport class KeyboardComponent {\n\n  constructor() { }\n\n}\n","<div class=\"keyboard-base\">\n    <div class=\"key tab\">Tab</div>\n    <div keyboardClick class=\"key q\">Q</div>\n    <div keyboardClick class=\"key w\">W</div>\n    <div keyboardClick class=\"key e\">E</div>\n    <div keyboardClick class=\"key r\">R</div>\n    <div keyboardClick class=\"key t\">T</div>\n    <div keyboardClick class=\"key y\">Y</div>\n    <div keyboardClick class=\"key u\">U</div>\n    <div keyboardClick class=\"key i\">I</div>\n    <div keyboardClick class=\"key o\">O</div>\n    <div keyboardClick class=\"key p\">P</div>\n    <div keyboardClick class=\"key [\">[</div>\n    <div keyboardClick class=\"key ]\">]</div>\n    <div keyboardClick class=\"key \\\">\\</div>\n    <div keyboardClick class=\"key capslock\">CapsLk</div>\n    <div keyboardClick class=\"key a\">A</div>\n    <div keyboardClick class=\"key s\">S</div>\n    <div keyboardClick class=\"key d\">D</div>\n    <div keyboardClick class=\"key f\">F</div>\n    <div keyboardClick class=\"key g\">G</div>\n    <div keyboardClick class=\"key h\">H</div>\n    <div keyboardClick class=\"key j\">J</div>\n    <div keyboardClick class=\"key k\">K</div>\n    <div keyboardClick class=\"key l\">L</div>\n    <div keyboardClick class=\"key ;\">;</div>\n    <div keyboardClick class=\"key '\">'</div>\n    <div keyboardClick class=\"key backspace\">Return</div>\n    <div keyboardClick class=\"key shift lshift\">Shift</div>\n    <div keyboardClick class=\"key z\">Z</div>\n    <div keyboardClick class=\"key x\">X</div>\n    <div keyboardClick class=\"key c\">C</div>\n    <div keyboardClick class=\"key v\">V</div>\n    <div keyboardClick class=\"key b\">B</div>\n    <div keyboardClick class=\"key n\">N</div>\n    <div keyboardClick class=\"key m\">M</div>\n    <div keyboardClick class=\"key ,\">,</div>\n    <div keyboardClick class=\"key .\">.</div>\n    <div keyboardClick class=\"key /\">/</div>\n    <div keyboardClick class=\"key shift rshift\">Shift</div>\n    <div keyboardClick class=\"key control lctrl\">Ctrl</div>\n    <div keyboardClick class=\"key lalt\">Alt</div>\n    <div keyboardClick class=\"key command\">Cmd</div>\n    <div keyboardClick class=\"key space\">Space</div>\n    <div keyboardClick class=\"key command\">Cmd</div>\n    <div keyboardClick class=\"key ralt\">Alt</div>\n    <div keyboardClick class=\"key control rctrl\">Ctrl</div>\n    <div keyboardClick class=\"key fn\">Fn</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'score',\n  templateUrl: './score.component.html',\n  styleUrls: ['./score.component.scss']\n})\nexport class ScoreComponent {\n\n  constructor(private gameService: GameService) { }\n  score: number = 0\n  animatedScore: number | null = null\n\n  updateScore(action: string, guessStartTime: number | null) {\n    let scoreToAdd: number = 0\n    let guessEndTime = Date.now()\n    if (action === 'add') {\n      if (!guessStartTime) return\n      scoreToAdd = this.gameService.calculateScore(guessStartTime, guessEndTime)\n    } else if (action === 'lower') {\n      scoreToAdd = this.gameService.calculateScore(null, null)\n    }\n    this.animatedScore = scoreToAdd\n    setTimeout(() => {\n      this.animatedScore = null\n    }, 750)\n    this.score += scoreToAdd\n  }\n\n  get scoreValue(): number {\n    return this.score\n  }\n}\n","<div class=\"score-container flex align-center\">\n    <span class=\"score-txt\">Score: <span>{{score}}</span></span>\n    <div ngClass=\"animated-added-score {{animatedScore && 'swipe'}}\">{{animatedScore}}</div>\n</div>","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { GameService } from '../services/game.service';\n\n@Directive({\n  selector: '[keyboardClick]'\n})\nexport class KeyboardClickDirective {\n  timeoutId: any\n  constructor(el: ElementRef, private gameService: GameService) {\n    this.gameService.clickedLetter$.subscribe(letterData => {\n      const classes = Array.from(el.nativeElement.classList)\n      if (classes.includes(letterData.letter)) {\n        el.nativeElement.classList.add('active')\n        this.timeoutId = setTimeout(() => {\n          el.nativeElement.classList.remove('active')\n        }, 200)\n      }\n    })\n  }\n\n  @HostListener('click', ['$event.target'])\n  onClick(elBtn: HTMLElement) {\n    const letter: string = elBtn.classList[1]\n    this.gameService.setClickedLetter({letter, origin: 'v-keyboard'})\n  }\n\n\n\n\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/user';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'ending-screen',\n  templateUrl: './ending-screen.component.html',\n  styleUrls: ['./ending-screen.component.scss']\n})\nexport class EndingScreenComponent implements OnInit {\n\n  constructor(private gameService: GameService) { }\n  @Input() endingScore: number | undefined\n  user$: Observable<User | null> | undefined\n\n  ngOnInit(): void {\n    this.user$ = this.gameService.currUser$\n  }\n\n}\n","<div class=\"ending-screen flex column align-center\">\n    <h3>Good job, <span *ngIf=\"user$\">{{(user$ | async)?.username }},</span> you scored {{endingScore}} points! 🥳</h3>\n    <leaderboards></leaderboards>\n</div>","import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { WordService as WordService } from 'src/app/services/word.service';\n// @ts-ignore\nimport randomWords from 'random-words'\nimport { GameService } from 'src/app/services/game.service';\nimport { Subject } from 'rxjs';\nimport { LetterData } from 'src/app/models/letter-data';\nimport { takeUntil } from 'rxjs/operators';\nimport { ScoreComponent } from 'src/app/cmps/score/score.component';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  constructor(private wordService: WordService, private gameService: GameService) { }\n  wordsRemaining: number = 3\n  totalWords: number = this.wordsRemaining\n  currWordNum: number = 0\n  isGameOn: boolean = false\n  isFirstTime: boolean = true\n  isWrongGuess: boolean = false\n  isLoadingHint: boolean = false\n  randomWord: string = ''\n  userInput: string = ''\n  subs$: Subject<boolean> = new Subject<boolean>()\n  error: string = ''\n  hint: string = ''\n  endingScore: number | undefined\n  startGuessTime: number | null = null\n  @Input() level?: string\n  @Output() onResetDifficulty = new EventEmitter()\n  @ViewChild('score')\n  private scoreCmp: ScoreComponent | undefined\n  @ViewChild('guessInput')\n  set input(element: ElementRef<HTMLInputElement>) {\n    if (element) {\n      element.nativeElement.focus()\n    }\n  }\n\n  ngOnInit(): void {\n    this.initLetterSub()\n  }\n\n  ngOnDestroy() {\n    this.subs$.next(true)\n    this.subs$.unsubscribe()\n  }\n\n  onStartGame() {\n    this.isGameOn = true\n    this.isFirstTime = false\n    this.wordsRemaining = this.wordService.getLevelWordsCount(this.level)\n    this.currWordNum = 0\n    this.totalWords = this.wordsRemaining\n    this.generateAndPlayRandomWord()\n  }\n\n  generateAndPlayRandomWord() {\n    this.randomWord = randomWords()\n    console.log(this.randomWord)\n    this.wordService.textToSpeech(this.randomWord)\n      .pipe(takeUntil(this.subs$))\n      .subscribe(\n        () => {\n          this.startGuessTime = Date.now()\n          this.playWordSound()\n        },\n      )\n  }\n\n  playWordSound() {\n    const audio = new Audio(`${environment.audioURL}/${this.randomWord}.mp3`)\n    audio.play()\n  }\n\n  onUserInput(ev: KeyboardEvent) {\n    this.gameService.setClickedLetter({ letter: ev.key.toLowerCase(), origin: 'input' })\n  }\n\n  onWordSubmit(ev: Event) {\n    ev.preventDefault()\n    this.userInput = this.userInput.toLowerCase()\n    if (this.userInput === this.randomWord) {\n      this.onCorrectSpelling()\n    } else {\n      this.onWrongSpelling()\n    }\n  }\n\n  onCorrectSpelling() {\n    this.scoreCmp?.updateScore('add', this.startGuessTime)\n    if (this.wordsRemaining > 0) {\n      this.wordsRemaining--\n      this.currWordNum++\n      this.hint = ''\n      this.error = ''\n      if (this.wordsRemaining <= 0) {\n        this.onGameOver()\n      } else {\n        this.generateAndPlayRandomWord()\n      }\n      this.userInput = ''\n\n    }\n  }\n\n  onWrongSpelling() {\n    this.isWrongGuess = true\n    const errorSound = new Audio('../../../assets/sounds/error.wav')\n    errorSound.play()\n    this.scoreCmp?.updateScore('lower', null)\n    setTimeout(() => {\n      this.isWrongGuess = false\n    }, 1000)\n  }\n\n  onGameOver() {\n    this.endingScore = this.scoreCmp?.scoreValue\n    this.isGameOn = false\n    this.gameService.updateLeaderboard(this.endingScore || 0, this.level!).subscribe()\n  }\n\n  handleLetter(letterData: LetterData) {\n    if (!this.isGameOn) return\n    const { letter, origin } = letterData\n    if (origin === 'input') return\n    if (letter === 'backspace') this.userInput = this.userInput.slice(0, this.userInput.length - 1)\n    if (letter.length > 1) return\n    this.userInput += letter\n  }\n\n  onGetHint() {\n    if (this.hint) return\n    this.isLoadingHint = true\n    this.wordService.getWordDefinition(this.randomWord)\n      .pipe(takeUntil(this.subs$))\n      .subscribe(\n        definition => {\n          this.isLoadingHint = false\n          this.hint = definition\n        },\n        err => {\n          this.error = err\n        })\n  }\n\n  private initLetterSub() {\n    this.gameService.clickedLetter$\n      .pipe(takeUntil(this.subs$))\n      .subscribe(letterData => {\n        this.handleLetter(letterData)\n      })\n  }\n}\n","<main class=\"game-app\">\n    <section *ngIf=\"!isGameOn\" class=\"pre-game-screen flex justify-center\">\n        <button (click)=\"onStartGame()\" class=\"regular-btn\">{{isFirstTime ? 'I am ready' : 'Play again' }}</button>\n        <button (click)=\"onResetDifficulty.emit()\" class=\"regular-btn\">Change Difficulty</button>\n    </section>\n    <ng-container *ngIf=\"!isGameOn && endingScore\" class=\"ending-screen\">\n        <ending-screen [endingScore]=\"endingScore\"></ending-screen>\n    </ng-container>\n    <section *ngIf=\"isGameOn\" class=\"game-container flex column align-center\">\n        <div class=\"actions flex justify-center\">\n            <button (click)=\"playWordSound()\" class=\"regular-btn\">Play word again</button>\n            <button *ngIf=\"!isLoadingHint; else showSpinner\" (click)=\"onGetHint()\" class=\"regular-btn\">Hint</button>\n            <ng-template #showSpinner>\n                <button class=\"regular-btn flex\">\n                    <img class=\"spinner\" src=\"../../../assets/img/spinner.svg\">\n                </button>\n            </ng-template>\n            <button (click)=\"onResetDifficulty.emit()\" class=\"regular-btn\">Change Difficulty</button>\n        </div>\n        <score #score></score>\n        <div class=\"progress-count-container flex\">\n            <span class=\"word-remaining word-{{idx + 1}}\" *ngFor=\"let _ of [].constructor(totalWords); let idx = index\"\n                [ngClass]=\"{'filled': currWordNum >= idx + 1}\"></span>\n        </div>\n        <span *ngIf=\"error\" class=\"error\">{{error}}</span>\n        <span *ngIf=\"hint\" class=\"hint\">{{hint}}</span>\n        <form (ngSubmit)=\"onWordSubmit($event)\" class=\"flex column align-center\">\n            <input #guessInput [ngClass]=\"{'wrong': isWrongGuess}\" type=\"text\" name=\"user-input\" [(ngModel)]=\"userInput\"\n                #keyboardInput (keydown)=\"onUserInput($event)\" autocomplete=\"off\" placeholder=\"Start typing...\">\n            <button>Guess</button>\n        </form>\n        <keyboard></keyboard>\n    </section>\n</main>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LeaderboardUser } from 'src/app/models/leaderboard-user';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'leaderboards',\n  templateUrl: './leaderboards.component.html',\n  styleUrls: ['./leaderboards.component.scss']\n})\nexport class LeaderboardsComponent implements OnInit {\n\n  constructor(private gameService: GameService) { }\n  leaderboardScores$: Observable<LeaderboardUser[]> | undefined\n  selectedLvl: string = 'medium'\n  ngOnInit(): void {\n    this.onFetchLeaderboardScores()\n  }\n\n  onFetchLeaderboardScores(lvl: string = 'medium') {\n    this.selectedLvl = lvl\n    this.leaderboardScores$ = this.gameService.getLeaderboardScores(lvl)\n  }\n\n}\n","<main class=\"leaderboard flex column align-center\">\n    <div class=\"levels flex\">\n        <button (click)=\"onFetchLeaderboardScores('easy')\"\n            [ngClass]=\"selectedLvl === 'easy' ? 'highlighted-option' : ''\">Easy</button>\n        <button (click)=\"onFetchLeaderboardScores('medium')\"\n            [ngClass]=\"selectedLvl === 'medium' ? 'highlighted-option' : ''\">Medium</button>\n        <button (click)=\"onFetchLeaderboardScores('hard')\"\n            [ngClass]=\"selectedLvl === 'hard' ? 'highlighted-option' : ''\">Hard</button>\n    </div>\n    <ng-template #loading>\n        <img class=\"spinner\" src=\"../../../assets/img/spinner.svg\" alt=\"\">\n    </ng-template>\n    <ng-container *ngIf=\"leaderboardScores$ | async else loading\">\n        <div class=\"trophy-container\">\n            <img src=\"../../../assets/img/trophy.png\" alt=\"\">\n        </div>\n        <div class=\"leaderboard-container flex column align-center\">\n            <ul>\n                <li *ngFor=\"let userScore of leaderboardScores$ | async let idx= index\" class=\"flex\">\n                    <div class=\"user-score flex space-around\">\n                        <span class=\"position\">#{{idx + 1}}</span>\n                        <span class=\"username\" [title]=\"userScore.username\">{{userScore.username | titlecase}}</span>\n                        <span class=\"score\">{{userScore.score}}</span>\n                    </div>\n\n                </li>\n            </ul>\n        </div>\n    </ng-container>\n</main>","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/models/user';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'settings-selection',\n  templateUrl: './settings-selection.component.html',\n  styleUrls: ['./settings-selection.component.scss']\n})\nexport class SettingsSelectionComponent implements OnInit, OnDestroy {\n\n  constructor(private gameService: GameService) { }\n  @Output() onLevelSelected = new EventEmitter<string>()\n  levelDescription: string = ''\n  currHoveredLevel: string = ''\n  user: User | null | undefined\n  currUserSub: Subscription | undefined\n  ngOnInit(): void {\n    this.currUserSub = this.gameService.currUser$.subscribe(user => this.user = user)\n  }\n\n  ngOnDestroy() {\n    this.currUserSub?.unsubscribe()\n  }\n\n  onSaveUsername(username: string) {\n    if (!username) return\n    this.gameService.setCurrUsername(username)\n  }\n\n  onLevelSelect(difficulty: string) {\n    if (!this.user) return\n    this.onLevelSelected.emit(difficulty)\n  }\n\n  setLevelDescription(level: string) {\n    if (level === 'easy') {\n      this.levelDescription = 'Spell 3 words'\n      this.currHoveredLevel = 'easy'\n    } else if (level === 'medium') {\n      this.levelDescription = 'Spell 5 words'\n      this.currHoveredLevel = 'medium'\n    } else if (level === 'hard') {\n      this.levelDescription = 'Spell 10 words'\n      this.currHoveredLevel = 'hard'\n    } else {\n      this.levelDescription = ''\n      this.currHoveredLevel = ''\n    }\n  }\n\n\n}\n","<section class=\"settings flex column align-center\">\n    <div *ngIf=\"!user\" class=\"username\">\n        <h4>Enter your name</h4>\n        <form class=\"flex column\" (ngSubmit)=\"onSaveUsername(usernameInput.value)\">\n            <input #usernameInput type=\"text\" required>\n            <button>Save</button>\n        </form>\n    </div>\n    <div class=\"levels-container\" [ngClass]=\"{'hidden': !user}\">\n        <h4>Select Difficulty</h4>\n        <div class=\"levels flex\">\n            <button (mouseenter)=\"setLevelDescription('easy')\" (mouseleave)=\"setLevelDescription('')\"\n                [disabled]=\"!user\" (click)=\"onLevelSelect('easy')\" class=\"regular-btn\">\n                Easy\n                <div class=\"description level-description-easy\" [ngClass]=\"{'show': currHoveredLevel === 'easy'}\">\n                    {{levelDescription}}\n                </div>\n            </button>\n            <button (mouseenter)=\"setLevelDescription('medium')\" (mouseleave)=\"setLevelDescription('')\"\n                [disabled]=\"!user\" (click)=\"onLevelSelect('medium')\" class=\"regular-btn\">\n                Medium\n                <div class=\"description level-description-medium\" [ngClass]=\"{'show': currHoveredLevel === 'medium'}\">\n                    {{levelDescription}}\n                </div>\n\n            </button>\n            <button (mouseenter)=\"setLevelDescription('hard')\" (mouseleave)=\"setLevelDescription('')\"\n                [disabled]=\"!user\" (click)=\"onLevelSelect('hard')\" class=\"regular-btn\">\n                Hard\n                <div class=\"description level-description-hard\" [ngClass]=\"{'show': currHoveredLevel === 'hard'}\">\n                    {{levelDescription}}\n                </div>\n\n            </button>\n        </div>\n    </div>\n</section>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LetterData } from '../models/letter-data';\nimport { UtilService } from './util.service';\nimport { v4 as uuid } from 'uuid'\nimport { User } from '../models/user';\nimport { environment } from 'src/environments/environment'\nimport { LeaderboardUser } from '../models/leaderboard-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  constructor(private utilService: UtilService, private http: HttpClient) { }\n\n  private _clickedLetter$: BehaviorSubject<LetterData> = new BehaviorSubject({ letter: '', origin: '' })\n  public clickedLetter$: Observable<LetterData> = this._clickedLetter$.asObservable()\n  private _currUser$: BehaviorSubject<User | null> = new BehaviorSubject(this.getUserFromStorage())\n  public currUser$: Observable<User | null> = this._currUser$.asObservable()\n\n  public setClickedLetter(letterData: LetterData): void {\n    this._clickedLetter$.next(letterData)\n  }\n\n  public setCurrUsername(username: string) {\n    const user: User = {\n      userId: uuid(),\n      username,\n    }\n    this._currUser$.next(user)\n    this.utilService.saveToStorage('user', user)\n  }\n\n  public calculateScore(startTime: number | null, endTime: number | null): number {\n    if (!startTime || !endTime) {\n      return -100\n    }\n    const diff = endTime - startTime\n    const diffInSeconds = +((diff % 60000) / 1000).toFixed(0)\n    switch (true) {\n      case (diffInSeconds <= 2):\n        return 500\n      case (diffInSeconds <= 5):\n        return 350\n      case (diffInSeconds > 5):\n        return 100\n      default:\n        return 0\n    }\n  }\n\n  public getLeaderboardScores(level = 'hard'): Observable<LeaderboardUser[]> {\n    const httpParams: HttpParams = new HttpParams()\n      .set('level', level)\n    return this.http.get<LeaderboardUser[]>(environment.leaderboardsURL, { params: httpParams })\n  }\n\n  public updateLeaderboard(score: number, level: string): Observable<User> {\n    let currUser = this._currUser$.value\n    if (!currUser) {\n      currUser = {\n        userId: uuid(),\n        username: 'Guest',\n\n      }\n    }\n    const userWithScore = { ...currUser, score, level }\n    return this.http.post<User>(environment.leaderboardsURL, userWithScore, { withCredentials: true })\n  }\n\n  private getUserFromStorage(): User | null {\n    let user = this.utilService.loadFromStorage('user')\n    if (!user) return null\n    return user\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor() { }\n\n  public saveToStorage(key: string, val: any) {\n    const str = JSON.stringify(val);\n    localStorage.setItem(key, str);\n  }\n\n  public loadFromStorage(key: string) {\n    const str = localStorage.getItem(key);\n    if (!str) return\n    return JSON.parse(str);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WordService {\n\n  constructor(private http: HttpClient) { }\n\n  public textToSpeech(txt: string) {\n    let httpParams: HttpParams = new HttpParams()\n      .set('text', txt)\n    return this.http.get(environment.speechURL, { params: httpParams, responseType: 'text' })\n      .pipe(\n        retry(3),\n        catchError((err) => throwError('Failed to fetch sound'))\n      )\n  }\n\n  public getWordDefinition(word: string): Observable<any> {\n    return this.http.get(`${environment.dictionaryURL}/${word}`).\n      pipe(\n        map((data: any) => {\n          const definition = data[0].meanings[0].definitions[0].definition\n          if (!definition) return throwError('Couldn\\'t get a hint for this word')\n          return definition\n        }),\n        retry(1),\n        catchError((err) => {\n          return throwError('Couldn\\'t get a hint for this word')\n        })\n      )\n  }\n\n  public getLevelWordsCount(level: string | undefined): number {\n    switch (level) {\n      case 'easy':\n        return 3\n      case 'medium':\n        return 5\n      case 'hard':\n        return 10\n      default:\n        return 3\n    }\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  leaderboardsURL: '//localhost:3030/api/leaderboard',\n  speechURL: '//localhost:3030/api/tts',\n  audioURL: '//localhost:3030/audio',\n  dictionaryURL: 'https://api.dictionaryapi.dev/api/v2/entries/en'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}